{"version":3,"sources":["reducers.ts","helpers/numbers.ts","components/TicketSegment/index.tsx","components/Ticket/index.tsx","entities/tab.ts","context.tsx","components/ShowMoreButton/index.tsx","components/Spinner/index.tsx","components/Tickets/index.tsx","components/Checkbox/index.tsx","components/Filter/index.tsx","components/Tabs/index.tsx","components/Header/index.tsx","resolvers/resolveTickets.ts","components/App/index.tsx","resolvers/resolveSearchId.ts","index.tsx"],"names":["Types","declOfNum","number","titles","Math","abs","withZero","n","getDuration","totalMinutes","days","floor","hours","minutes","round","TicketSegment","stopsCount","segment","departureDate","Date","date","departureDateHM","getUTCHours","getUTCMinutes","arrivalDate","getTime","duration","arrivalDateHM","className","origin","destination","stops","length","replace","toString","join","Ticket","price","ticket","Intl","NumberFormat","style","currency","minimumFractionDigits","format","src","carrier","alt","segments","map","index","ticketReducer","state","action","type","AddTickets","concat","payload","filtersReducer","SetStopsCount","AddStopCount","includes","RemoveStopCount","filter","stopCount","LoadMoreTickets","ticketsLimit","sortReducer","SetSort","loadingReducer","SetLoading","TAB_IDS","initialState","loading","tickets","sort","filters","AppContext","createContext","dispatch","mainReducer","AppProvider","children","useReducer","Provider","value","ShowMoreButton","useContext","onClick","Spinner","xmlns","viewBox","r","strokeWidth","Tickets","sortedTickets","ticketStopsCount","reduce","accumulator","currentValue","a","b","slice","Checkbox","title","checked","onChange","getCheckboxLabel","Filter","ticketsStopsCount","v","i","indexOf","onChangeStopsCount","e","target","Tab","selected","onSelect","cn","Tabs","tabs","id","tab","tabId","Header","resolveTickets","searchId","onLoadTickets","fetch","then","ok","json","stop","Promise","resolve","App","useEffect","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1f749851.chunk.js","sourcesContent":["import { Ticket } from './entities/ticket';\nimport { TabIds } from './entities/tab';\n\ntype ActionMap<M extends { [index: string]: any }> = {\n  [Key in keyof M]: M[Key] extends undefined\n    ? {\n      type: Key;\n    }\n    : {\n      type: Key;\n      payload: M[Key];\n    }\n};\n\nexport enum Types {\n  // eslint-disable-next-line no-unused-vars\n  AddTickets = 'ADD_TICKETS',\n  // eslint-disable-next-line no-unused-vars\n  SetSort = 'SET_SORT',\n  // eslint-disable-next-line no-unused-vars\n  AddStopCount = 'ADD_STOP_COUNT',\n  // eslint-disable-next-line no-unused-vars\n  RemoveStopCount = 'REMOVE_STOP_COUNT',\n  // eslint-disable-next-line no-unused-vars\n  SetStopsCount = 'SET_STOPS_COUNT',\n  // eslint-disable-next-line no-unused-vars\n  LoadMoreTickets = 'LOAD_MORE_TICKETS',\n  // eslint-disable-next-line no-unused-vars\n  SetLoading = 'SET_LOADING',\n}\n\nexport type Actions = TicketActions | SortActions | FiltersActions | LoadingActions;\n\n// Tickets\n\ntype TicketPayload = {\n  [Types.AddTickets] : Ticket[];\n}\n\nexport type TicketActions = ActionMap<TicketPayload>[keyof ActionMap<TicketPayload>];\n\nexport const ticketReducer = (state: Ticket[], action: Actions) => {\n  switch (action.type) {\n  case Types.AddTickets:\n    return state.concat(...action.payload);\n  default:\n    return state;\n  }\n};\n\n// Filters\n\ntype FiltersPayload = {\n  [Types.SetStopsCount] : number[];\n  [Types.AddStopCount] : number;\n  [Types.RemoveStopCount] : number;\n  [Types.LoadMoreTickets] : undefined;\n}\n\nexport type FiltersActions = ActionMap<FiltersPayload>[keyof ActionMap<FiltersPayload>];\n\nexport const filtersReducer = (state: {stopsCount: number[], ticketsLimit: number}, action: Actions) => {\n  switch (action.type) {\n  case Types.SetStopsCount:\n    return {\n      ...state,\n      stopsCount: action.payload,\n    };\n  case Types.AddStopCount:\n    return {\n      ...state,\n      stopsCount: !state.stopsCount.includes(action.payload) ?\n        [...state.stopsCount, action.payload] : state.stopsCount,\n    };\n  case Types.RemoveStopCount:\n    return {\n      ...state,\n      stopsCount: state.stopsCount.filter((stopCount) => {\n        return stopCount !== action.payload;\n      }),\n    };\n  case Types.LoadMoreTickets:\n    return {\n      ...state,\n      ticketsLimit: state.ticketsLimit + 5,\n    };\n  default:\n    return state;\n  }\n};\n\n// Sort\n\ntype SortPayload = {\n  [Types.SetSort] : TabIds;\n}\n\nexport type SortActions = ActionMap<SortPayload>[keyof ActionMap<SortPayload>];\n\nexport const sortReducer = (state: TabIds, action: Actions) => {\n  switch (action.type) {\n  case Types.SetSort:\n    return action.payload;\n  default:\n    return state;\n  }\n};\n\n// Loading\n\ntype LoadingPayload = {\n  [Types.SetLoading] : boolean;\n}\n\nexport type LoadingActions = ActionMap<LoadingPayload>[keyof ActionMap<LoadingPayload>];\n\nexport const loadingReducer = (state: boolean, action: Actions) => {\n  switch (action.type) {\n  case Types.SetLoading:\n    return action.payload;\n  default:\n    return state;\n  }\n};\n","export const declOfNum = (number: number, titles: [string, string, string]) => { // 1, 3, 10\n  const cases = [2, 0, 1, 1, 1, 2];\n  number = Math.abs(number);\n  return titles[(number % 100 > 4 && number % 100 < 20) ? 2 : cases[(number % 10 < 5) ? number % 10 : 5]];\n};\n","import React from 'react';\nimport { TicketSegment as TicketSegmentType } from '../../entities/ticket';\nimport './index.css';\nimport { declOfNum } from '../../helpers/numbers';\n\ntype Params = {\n  segment: TicketSegmentType,\n}\n\nconst withZero = (n: number) => n < 10 ? `0${n}` : n;\nconst getDuration = (totalMinutes: number) => {\n  const days = Math.floor(totalMinutes / 1440); // 60*24\n  const hours = Math.floor((totalMinutes - (days * 1440)) / 60);\n  const minutes = Math.round(totalMinutes % 60);\n\n  if (days) {\n    return `${days}д ${hours}ч ${withZero(minutes)}м`;\n  } else {\n    return `${hours}ч ${withZero(minutes)}м`;\n  }\n};\n\nconst getStopsText = (stopsCount: number) => {\n  if (!stopsCount) {\n    return 'без пересадок';\n  }\n\n  return declOfNum(stopsCount, ['%s пересадка', '%s пересадки', '%s пересадок'])\n    .replace('%s', stopsCount.toString());\n};\n\nexport const TicketSegment = ({ segment }: Params) => {\n  const departureDate = new Date(segment.date);\n  const departureDateHM = `${withZero(departureDate.getUTCHours())}:${withZero(departureDate.getUTCMinutes())}`;\n  const arrivalDate = new Date(departureDate.getTime() + segment.duration * 60000);\n  const arrivalDateHM = `${withZero(arrivalDate.getUTCHours())}:${withZero(arrivalDate.getUTCMinutes())}`;\n\n  return (\n    <div className=\"TicketSegment\">\n      <div className=\"TicketSegment__data\">\n        <div className=\"TicketSegment__dataHeader\">{segment.origin} – {segment.destination}</div>\n        <div className=\"TicketSegment__dataText\">{departureDateHM} – {arrivalDateHM}</div>\n      </div>\n      <div className=\"TicketSegment__data\">\n        <div className=\"TicketSegment__dataHeader\">в пути</div>\n        <div className=\"TicketSegment__dataText\">{getDuration(segment.duration)}</div>\n      </div>\n      <div className=\"TicketSegment__data\">\n        <div className=\"TicketSegment__dataHeader\">{getStopsText(segment.stops.length)}</div>\n        <div className=\"TicketSegment__dataText\">{segment.stops.join(', ')}</div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Ticket as TicketType } from '../../entities/ticket';\nimport { TicketSegment } from '../TicketSegment';\nimport './index.css';\n\ntype Params = {\n  ticket: TicketType,\n}\n\nconst formatPrice = (price: number) => {\n  return new Intl.NumberFormat('ru-RU', {\n    style: 'currency',\n    currency: 'RUB',\n    minimumFractionDigits: 0,\n  }).format(price);\n};\n\nexport const Ticket = ({ ticket }: Params) => {\n  return (\n    <div className=\"Ticket\">\n      <div className=\"Ticket__header\">\n        <div className=\"Ticket__price\">{formatPrice(ticket.price)}</div>\n        <div className=\"Ticket__carrierLogo\">\n          <img src={`//pics.avs.io/99/36/${ticket.carrier}.png`} alt=\"\" />\n        </div>\n      </div>\n      <div className=\"Ticket__segments\">\n        {ticket.segments.map((segment, index) => (\n          <div key={index} className=\"Ticket__segment\">\n            <TicketSegment segment={segment} />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\n","export const TAB_IDS = {\n  CHEAP: 0,\n  FAST: 1,\n  OPTIMAL: 2,\n};\n\nexport type TabIdsKeys = keyof typeof TAB_IDS;\nexport type TabIds = typeof TAB_IDS[TabIdsKeys];\n\nexport type Tab = {\n  id: TabIds,\n  title: string,\n}\n","import React, { createContext, useReducer, Dispatch } from 'react';\nimport { ticketReducer, sortReducer, filtersReducer, Actions, loadingReducer } from './reducers';\nimport { Ticket } from './entities/ticket';\nimport { TAB_IDS, TabIds } from './entities/tab';\n\ntype InitialStateType = {\n  loading: boolean,\n  tickets: Ticket[];\n  sort: TabIds;\n  filters: {\n    ticketsLimit: number,\n    stopsCount: number[],\n  };\n}\n\nconst initialState = {\n  loading: true,\n  tickets: [],\n  sort: TAB_IDS.OPTIMAL,\n  filters: {\n    ticketsLimit: 5,\n    stopsCount: [],\n  },\n};\n\nconst AppContext = createContext<{\n  state: InitialStateType;\n  dispatch: Dispatch<Actions>;\n}>({\n  state: initialState,\n  dispatch: () => null,\n});\n\nconst mainReducer = ({ tickets, sort, filters, loading }: InitialStateType, action: Actions) => ({\n  loading: loadingReducer(loading, action),\n  filters: filtersReducer(filters, action),\n  sort: sortReducer(sort, action),\n  tickets: ticketReducer(tickets, action),\n});\n\nconst AppProvider: React.FC = ({ children }: any) => {\n  const [state, dispatch] = useReducer(mainReducer, initialState);\n\n  return (\n    <AppContext.Provider value={{ state, dispatch }}>\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport { AppProvider, AppContext };\n","import React, { useContext } from 'react';\nimport './index.css';\nimport { AppContext } from '../../context';\nimport { Types } from '../../reducers';\n\nexport const ShowMoreButton = () => {\n  const { dispatch } = useContext(AppContext);\n  const onClick = () => dispatch({\n    type: Types.LoadMoreTickets,\n  });\n  return (\n    <button className=\"ShowMoreButton\" onClick={onClick}>Показать еще 5 билетов!</button>\n  );\n};\n","import React from 'react';\nimport './index.css';\n\nconst Spinner = () => {\n  return (\n    <svg className=\"Spinner\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"-20 -20 40 40\">\n      <circle r=\"16\" strokeWidth=\"3\" />\n    </svg>\n  );\n};\n\nexport default Spinner;\n","import React, { useContext } from 'react';\nimport { Ticket } from '../Ticket';\nimport './index.css';\nimport { ShowMoreButton } from '../ShowMoreButton';\nimport { AppContext } from '../../context';\nimport { TAB_IDS } from '../../entities/tab';\nimport Spinner from '../Spinner';\n\nexport const Tickets = () => {\n  const { state: { loading, tickets, filters: { stopsCount, ticketsLimit }, sort } } = useContext(AppContext);\n  const filteredTickets = tickets.filter((ticket) => {\n    if (stopsCount.length) {\n      const ticketStopsCount = ticket.segments\n        .map((segment) => segment.stops.length)\n        .reduce((accumulator, currentValue) => accumulator + currentValue, 0);\n      return stopsCount.includes(ticketStopsCount);\n    }\n\n    return true;\n  });\n\n  const sortedTickets = filteredTickets.sort((a, b): number => {\n    switch (sort) {\n    case TAB_IDS.FAST:\n      const timeA = a.segments\n        .map((segment) => segment.duration)\n        .reduce((accumulator, currentValue) => accumulator + currentValue, 0);\n      const timeB = b.segments\n        .map((segment) => segment.duration)\n        .reduce((accumulator, currentValue) => accumulator + currentValue, 0);\n\n      return timeA - timeB;\n\n    case TAB_IDS.CHEAP:\n      return a.price - b.price;\n\n    case TAB_IDS.OPTIMAL: // Считаем, что бекенд по умолчанию возвращает оптимальную сортировку ;)\n    default:\n      return 1;\n    }\n  });\n  return (\n    <div className=\"Tickets\">\n      <div className=\"Tickets__list\">\n        {sortedTickets.slice(0, ticketsLimit).map((ticket, index) => (\n          <div key={index} className=\"Tickets__ticket\">\n            <Ticket ticket={ticket} />\n          </div>\n        ))}\n      </div>\n      {sortedTickets.length > ticketsLimit && (\n        <div className=\"Tickets__showMoreButton\">\n          <ShowMoreButton />\n        </div>\n      )}\n      {loading && <div className=\"Tickets__spinner\"><Spinner /></div>}\n    </div>\n  );\n};\n\n","import React, { ChangeEvent } from 'react';\nimport './index.css';\n\nexport const Checkbox = ({ title, checked, onChange }: { title: string, checked: boolean, onChange: (e: ChangeEvent<HTMLInputElement>) => void }) => {\n  return (\n    <label className=\"Checkbox\">\n      <input className=\"Checkbox__input\" type=\"checkbox\" checked={checked} onChange={onChange}/>\n      <span className=\"Checkbox__box\"/>\n      {title}\n    </label>\n  );\n};\n","import React, { ChangeEvent, useContext } from 'react';\nimport { declOfNum } from '../../helpers/numbers';\nimport { Checkbox } from '../Checkbox';\nimport './index.css';\nimport { AppContext } from '../../context';\nimport { Types } from '../../reducers';\n\nconst getCheckboxLabel = (stopCount: number) => {\n  return stopCount ? declOfNum(stopCount, ['%s пересадка', '%s пересадки', '%s пересадок'])\n    .replace('%s', stopCount.toString()) : 'Без пересадок';\n};\n\nexport const Filter = () => {\n  const { state: { tickets, filters: { stopsCount } }, dispatch } = useContext(AppContext);\n  const ticketsStopsCount = tickets.map((ticket) => ticket.segments\n    .map((segment) => segment.stops.length)\n    .reduce((accumulator, currentValue) => accumulator + currentValue, 0))\n    .filter((v, i, a) => a.indexOf(v) === i)\n    .sort();\n\n  const onChangeStopsCount = (stopCount: number) => (e: ChangeEvent<HTMLInputElement>) => {\n    dispatch({\n      type: e.target.checked ? Types.AddStopCount : Types.RemoveStopCount,\n      payload: stopCount,\n    });\n  };\n  const onChangeAll = () => dispatch({\n    type: Types.SetStopsCount,\n    payload: [],\n  });\n\n  return (\n    <div className=\"Filter\">\n      <div className=\"Filter__header\">Количество пересадок</div>\n      <label className=\"Filter__item\">\n        <Checkbox\n          checked={!stopsCount.length}\n          onChange={onChangeAll}\n          title=\"Все\"/>\n      </label>\n      {ticketsStopsCount.map((stopCount) => (\n        <label key={stopCount} className=\"Filter__item\">\n          <Checkbox\n            checked={stopsCount.includes(stopCount)}\n            onChange={onChangeStopsCount(stopCount)}\n            title={getCheckboxLabel(stopCount)}/>\n        </label>\n      ),\n      )}\n    </div>\n  );\n};\n","import React, { useContext } from 'react';\nimport cn from 'classnames';\nimport { Tab as TabType, TAB_IDS, TabIds } from '../../entities/tab';\nimport './index.css';\nimport { AppContext } from '../../context';\nimport { Types } from '../../reducers';\n\nconst Tab = ({ title, selected, onSelect }: {title: string, selected: boolean, onSelect: () => void}) => {\n  return (\n    <button className={cn('Tabs__tab', { 'Tabs__tab--selected': selected })} onClick={onSelect}>\n      {title}\n    </button>\n  );\n};\n\nexport const Tabs = () => {\n  const { state: { sort }, dispatch } = useContext(AppContext);\n  const tabs: TabType[] = [\n    { id: TAB_IDS.CHEAP, title: 'Самый дешёвый' },\n    { id: TAB_IDS.FAST, title: 'Самый быстрый' },\n    { id: TAB_IDS.OPTIMAL, title: 'Оптимальный' },\n  ];\n  const onSelect = (tabId: TabIds) => () => dispatch({\n    type: Types.SetSort,\n    payload: tabId,\n  });\n\n  return (\n    <div className=\"Tabs\">\n      {tabs.map((tab) => (\n        <Tab key={tab.id} title={tab.title} selected={tab.id === sort} onSelect={onSelect(tab.id)} />\n      ))}\n    </div>\n  );\n};\n","import React from 'react';\nimport './index.css';\n\nexport const Header = () => {\n  return (\n    <div className=\"Header\" />\n  );\n};\n","import { Ticket } from '../entities/ticket';\n\nexport const resolveTickets = (searchId: string, onLoadTickets: (tickets: Ticket[]) => void): Promise<void> => {\n  const url = 'https://front-test.beta.aviasales.ru/tickets?searchId=' + searchId;\n  return fetch(url)\n    .then((r) => r.ok ? r.json() : { tickets: [], stop: false })\n    .then(({ tickets, stop }) => {\n      onLoadTickets(tickets);\n      if (!stop) {\n        return resolveTickets(searchId, onLoadTickets);\n      }\n      return Promise.resolve();\n    });\n};\n","import React, { useContext, useEffect } from 'react';\nimport { Tickets } from '../Tickets';\nimport { Filter } from '../Filter';\nimport { Tabs } from '../Tabs';\nimport { Header } from '../Header';\nimport './index.css';\nimport { resolveSearchId } from '../../resolvers/resolveSearchId';\nimport { resolveTickets } from '../../resolvers/resolveTickets';\nimport { Types } from '../../reducers';\nimport { AppContext } from '../../context';\n\nexport const App = () => {\n  const { dispatch } = useContext(AppContext);\n\n  useEffect(() => {\n    resolveSearchId()\n      .then((searchId) => resolveTickets(searchId,\n        ((tickets) => {\n          dispatch({\n            type: Types.AddTickets,\n            payload: tickets,\n          });\n        })))\n      .then(() => {\n        dispatch({\n          type: Types.SetLoading,\n          payload: false,\n        });\n      });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Header/>\n      <div className=\"App__content\">\n        <Filter/>\n        <div>\n          <Tabs/>\n          <Tickets/>\n        </div>\n      </div>\n    </div>\n  );\n};\n","export const resolveSearchId = (): Promise<string> => {\n  const url = 'https://front-test.beta.aviasales.ru/search';\n  return fetch(url)\n    .then((r) => r.json())\n    .then(({ searchId }) => searchId);\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './components/App';\nimport { AppProvider } from './context';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n"],"sourceRoot":""}