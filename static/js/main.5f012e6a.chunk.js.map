{"version":3,"sources":["helpers/numbers.ts","components/TicketSegment/index.tsx","components/Ticket/index.tsx","components/Tickets/index.tsx","components/Checkbox/index.tsx","components/Filter/index.tsx","helpers/arrays.ts","App.tsx","index.tsx"],"names":["declOfNum","number","titles","Math","abs","withZero","n","getDuration","totalMinutes","days","floor","hours","minutes","round","TicketSegment","stopsCount","segment","departureDate","Date","date","departureDateHM","getHours","getMinutes","arrivalDate","getTime","duration","arrivalDateHM","className","origin","destination","stops","length","replace","toString","join","Ticket","price","ticket","Intl","NumberFormat","style","currency","minimumFractionDigits","format","src","carrier","alt","segments","map","index","Tickets","tickets","Checkbox","title","checked","onChange","type","getCheckboxLabel","stopCount","Filter","useState","selectedStopsCount","setSelectedStopsCount","onChangeStopsCount","e","value","array","target","includes","filter","item","removeValue","App","ApiResponse","sort","random","slice","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5f012e6a.chunk.js","sourcesContent":["export const declOfNum = (number: number, titles: [string, string, string]) => { // 1, 3, 10\n  const cases = [2, 0, 1, 1, 1, 2];\n  number = Math.abs(number);\n  return titles[(number % 100 > 4 && number % 100 < 20) ? 2 : cases[(number % 10 < 5) ? number % 10 : 5]];\n};\n","import React from 'react';\nimport { TicketSegment as TicketSegmentType } from '../../entities/ticket';\nimport './index.css';\nimport { declOfNum } from '../../helpers/numbers';\n\ntype Params = {\n  segment: TicketSegmentType,\n}\n\nconst withZero = (n: number) => n < 10 ? `0${n}` : n;\nconst getDuration = (totalMinutes: number) => {\n  const days = Math.floor(totalMinutes / 1440); // 60*24\n  const hours = Math.floor((totalMinutes - (days * 1440)) / 60);\n  const minutes = Math.round(totalMinutes % 60);\n\n  if (days) {\n    return `${days}д ${hours}ч ${withZero(minutes)}м`;\n  } else {\n    return `${hours}ч ${withZero(minutes)}м`;\n  }\n};\n\nconst getStopsText = (stopsCount: number) => {\n  if (!stopsCount) {\n    return 'без пересадок';\n  }\n\n  return declOfNum(stopsCount, ['%s пересадка', '%s пересадки', '%s пересадок'])\n    .replace('%s', stopsCount.toString());\n};\n\nexport const TicketSegment = ({ segment }: Params) => {\n  const departureDate = new Date(segment.date);\n  const departureDateHM = `${withZero(departureDate.getHours())}:${withZero(departureDate.getMinutes())}`;\n  const arrivalDate = new Date(departureDate.getTime() + segment.duration * 60000);\n  const arrivalDateHM = `${withZero(arrivalDate.getHours())}:${withZero(arrivalDate.getMinutes())}`;\n\n  return (\n    <div className=\"TicketSegment\">\n      <div className=\"TicketSegment__data\">\n        <div className=\"TicketSegment__dataHeader\">{segment.origin} – {segment.destination}</div>\n        <div className=\"TicketSegment__dataText\">{departureDateHM} – {arrivalDateHM}</div>\n      </div>\n      <div className=\"TicketSegment__data\">\n        <div className=\"TicketSegment__dataHeader\">в пути</div>\n        <div className=\"TicketSegment__dataText\">{getDuration(segment.duration)}</div>\n      </div>\n      <div className=\"TicketSegment__data\">\n        <div className=\"TicketSegment__dataHeader\">{getStopsText(segment.stops.length)}</div>\n        <div className=\"TicketSegment__dataText\">{segment.stops.join(', ')}</div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Ticket as TicketType } from '../../entities/ticket';\nimport { TicketSegment } from '../TicketSegment';\nimport './index.css';\n\ntype Params = {\n  ticket: TicketType,\n}\n\nconst formatPrice = (price: number) => {\n  return new Intl.NumberFormat('ru-RU', {\n    style: 'currency',\n    currency: 'RUB',\n    minimumFractionDigits: 0,\n  }).format(price);\n};\n\nexport const Ticket = ({ ticket }: Params) => {\n  return (\n    <div className=\"Ticket\">\n      <div className=\"Ticket__header\">\n        <div className=\"Ticket__price\">{formatPrice(ticket.price)}</div>\n        <div className=\"Ticket__carrierLogo\">\n          <img src={`//pics.avs.io/99/36/${ticket.carrier}.png`} alt=\"\" />\n        </div>\n      </div>\n      <div className=\"Ticket__segments\">\n        {ticket.segments.map((segment, index) => (\n          <div key={index} className=\"Ticket__segment\">\n            <TicketSegment segment={segment} />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\n","import React from 'react';\nimport { Ticket as TicketType } from '../../entities/ticket';\nimport { Ticket } from '../Ticket';\nimport './index.css';\n\ntype Params = {\n  tickets: TicketType[],\n}\n\nexport const Tickets = ({ tickets }: Params) => {\n  return (\n    <div className=\"Tickets\">\n      {tickets.map((ticket, index) => (\n        <div key={index} className=\"Tickets__ticket\">\n          <Ticket ticket={ticket} />\n        </div>\n      ))}\n    </div>\n  );\n};\n\n","import React, { ChangeEvent } from 'react';\nimport './index.css';\n\nexport const Checkbox = ({ title, checked, onChange }: { title: string, checked: boolean, onChange: (e: ChangeEvent<HTMLInputElement>) => void }) => {\n  return (\n    <label className=\"Checkbox\">\n      <input className=\"Checkbox__input\" type=\"checkbox\" checked={checked} onChange={onChange}/>\n      <span className=\"Checkbox__box\"/>\n      {title}\n    </label>\n  );\n};\n","import React, { ChangeEvent, useState } from 'react';\nimport { declOfNum } from '../../helpers/numbers';\nimport { addValue, removeValue } from '../../helpers/arrays';\nimport { Checkbox } from '../Checkbox';\nimport './index.css';\n\nconst getCheckboxLabel = (stopCount: number) => {\n  return stopCount ? declOfNum(stopCount, ['%s пересадка', '%s пересадки', '%s пересадок'])\n    .replace('%s', stopCount.toString()) : 'Без пересадок';\n};\n\nexport const Filter = () => {\n  const [selectedStopsCount, setSelectedStopsCount] = useState<number[]>([]);\n  const [stopsCount] = useState<number[]>([1, 3]);\n\n  const onChangeStopsCount = (stopCount: number) => (e: ChangeEvent<HTMLInputElement>) => {\n    setSelectedStopsCount(e.target.checked ?\n      addValue(stopCount, selectedStopsCount) :\n      removeValue(stopCount, selectedStopsCount));\n  };\n  const onChangeAll = () => setSelectedStopsCount([]);\n\n  return (\n    <div className=\"Filter\">\n      <div className=\"Filter__header\">Количество пересадок</div>\n      <label className=\"Filter__item\">\n        <Checkbox\n          checked={!selectedStopsCount.length}\n          onChange={onChangeAll}\n          title=\"Все\"/>\n      </label>\n      {stopsCount.map((stopCount) => (\n        <label key={stopCount} className=\"Filter__item\">\n          <Checkbox\n            checked={selectedStopsCount.includes(stopCount)}\n            onChange={onChangeStopsCount(stopCount)}\n            title={getCheckboxLabel(stopCount)}/>\n        </label>\n      ),\n      )}\n    </div>\n  );\n};\n","export const addValue = <T>(value: T, array: T[]): T[] => {\n  if (!array.includes(value)) {\n    return [...array, value];\n  }\n  return array;\n};\n\nexport const removeValue = <T>(value: T, array: T[]): T[] => {\n  return array.filter(function(item) {\n    return item !== value;\n  });\n};\n","import React from 'react';\nimport { Tickets } from './components/Tickets';\nimport { Ticket } from './entities/ticket';\nimport ApiResponse from './tickets.json';\nimport './App.css';\nimport { Filter } from './components/Filter';\n\nexport const App = () => {\n  const tickets: Ticket[] = ApiResponse.tickets.sort(() => .5 - Math.random()).slice(0, 10);\n  return (\n    <div className=\"App\">\n      <div className=\"App__content\">\n        <Filter />\n        <Tickets tickets={tickets} />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n"],"sourceRoot":""}